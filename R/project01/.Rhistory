xlab('월') +
ylab('평균평점') +
theme_classic() +
theme_bw(base_family = '맑은 고딕') +
theme(plot.title = element_text(size=20, color = 'red',
hjust = 0.5, vjust=0)) +
theme(axis.title.x = element_text(size = 15, color = 'red',
hjust = 0.5, vjust = 0)) +
theme(axis.title.y = element_text(size= 15, color = 'red',
hjust = 0.5, vjust = 0)) +
theme(axis.text.x = element_text(angle=90, size = 10, color='black')) +
theme(axis.text.y = element_text(angle=0, size = 10, color='black')) +
theme(legend.title = element_text(face="italic", colour="darkblue",size=10)) +
geom_text(aes(y=month_score_mean - 0.2, label= paste(round(month_score_mean,1), '점')),
color='black', size=5) +
abline(y= 8)
ggplot(month_score, aes(x= month, y= month_score_mean, fill= month)) +
geom_bar(stat = 'identity', color = 'black') +
ggtitle('월별에 따른 평균평점') +
xlab('월') +
ylab('평균평점') +
theme_classic() +
theme_bw(base_family = '맑은 고딕') +
theme(plot.title = element_text(size=20, color = 'red',
hjust = 0.5, vjust=0)) +
theme(axis.title.x = element_text(size = 15, color = 'red',
hjust = 0.5, vjust = 0)) +
theme(axis.title.y = element_text(size= 15, color = 'red',
hjust = 0.5, vjust = 0)) +
theme(axis.text.x = element_text(angle=90, size = 10, color='black')) +
theme(axis.text.y = element_text(angle=0, size = 10, color='black')) +
theme(legend.title = element_text(face="italic", colour="darkblue",size=10)) +
geom_text(aes(y=month_score_mean - 0.2, label= paste(round(month_score_mean,1), '점')),
color='black', size=5) +
abline(y= 8, linetype=2)
ggplot(month_score, aes(x= month, y= month_score_mean, fill= month)) +
geom_bar(stat = 'identity', color = 'black') +
ggtitle('월별에 따른 평균평점') +
xlab('월') +
ylab('평균평점') +
theme_classic() +
theme_bw(base_family = '맑은 고딕') +
theme(plot.title = element_text(size=20, color = 'red',
hjust = 0.5, vjust=0)) +
theme(axis.title.x = element_text(size = 15, color = 'red',
hjust = 0.5, vjust = 0)) +
theme(axis.title.y = element_text(size= 15, color = 'red',
hjust = 0.5, vjust = 0)) +
theme(axis.text.x = element_text(angle=90, size = 10, color='black')) +
theme(axis.text.y = element_text(angle=0, size = 10, color='black')) +
theme(legend.title = element_text(face="italic", colour="darkblue",size=10)) +
geom_text(aes(y=month_score_mean - 0.2, label= paste(round(month_score_mean,1), '점')),
color='black', size=5) +
abline(h= 8, linetype=2)
ggplot(month_score, aes(x= month, y= month_score_mean, fill= month)) +
geom_bar(stat = 'identity', color = 'black') +
ggtitle('월별에 따른 평균평점') +
xlab('월') +
ylab('평균평점') +
theme_classic() +
theme_bw(base_family = '맑은 고딕') +
theme(plot.title = element_text(size=20, color = 'red',
hjust = 0.5, vjust=0)) +
theme(axis.title.x = element_text(size = 15, color = 'red',
hjust = 0.5, vjust = 0)) +
theme(axis.title.y = element_text(size= 15, color = 'red',
hjust = 0.5, vjust = 0)) +
theme(axis.text.x = element_text(angle=90, size = 10, color='black')) +
theme(axis.text.y = element_text(angle=0, size = 10, color='black')) +
theme(legend.title = element_text(face="italic", colour="darkblue",size=10)) +
geom_text(aes(y=month_score_mean - 0.2, label= paste(round(month_score_mean,1), '점')),
color='black', size=5) +
abline(h= 8)
setwd('D:/Heechul/Project/R/project01')
### 1. Word Cloud
## 파일 불러오기
rawdata <- read.csv('data/review(naver).csv', header = T)
data <- rawdata %>%
select(reple)
str(data)
head(data)
write.csv(data,'data/reple.csv',
row.names=F)
data <- readLines('data/reple.csv')
okja <- sapply(data, extractNoun, USE.NAMES = F)
okja <- unlist(okja)
head(okja)
## 1. 단어 삭제하기
# 1. 한글, 영어 외는 삭제
okja <- str_replace_all(okja,'[^[:alpha:]]','')     # 한글, 영어 외는 삭제
okja
# 3. 저장후 테이블로 불러서 공백 지우기
write(unlist(okja), 'data/reple.txt')
rev <- read.table('data/reple.txt')
nrow(rev)
## 1. 단어 삭제하기
# 1. 한글, 영어 외는 삭제
okja <- str_replace_all(okja,'[^[:alpha:]]','')     # 한글, 영어 외는 삭제
okja
# 3. 저장후 테이블로 불러서 공백 지우기
write(unlist(okja), 'data/reple.txt')
rev <- read.table('data/reple.txt')
nrow(rev)
# 필터링으로 지우기
okja <- Filter(function(x){nchar(x) >=2 & nchar(x) <=5 }, okja)
okja
# 지울 단어 불러와서 반복문으로 지우기
txt <- readLines('data/okjagsub.txt')
i <- 1
for(i in 1 : length(txt)) {
okja <- gsub((txt[i]), '', okja)
}
okja
# 3. 저장후 테이블로 불러서 공백 지우기
write(unlist(okja), 'data/reple.txt')
rev <- read.table('data/reple.txt')
nrow(rev)
# 2. gsub() 함수로 바꾸기
okja <- gsub('의미','주제', okja)
okja <- gsub('감성','감정', okja)
okja <- gsub('내용','주제', okja)
okja <- gsub('채식주의자','채식', okja)
okja <- gsub('채식주의','채식', okja)
okja
# 3. 저장후 테이블로 불러서 공백 지우기
write(unlist(okja), 'data/reple.txt')
rev <- read.table('data/reple.txt')
nrow(rev)
wordcount <- table(rev)
head(sort(wordcount, decreasing = T), 100)
data <- readLines('data/reple.csv')
okja <- sapply(data, extractNoun, USE.NAMES = F)
okja <- unlist(okja)
## 1. 단어 삭제하기
# 1. 한글, 영어 외는 삭제
okja <- str_replace_all(okja,'[^[:alpha:]]','')     # 한글, 영어 외는 삭제
okja
## 1. 단어 바꾸기 & 삭제하기
# 1) 한글, 영어 외는 삭제
okja <- str_replace_all(okja,'[^[:alpha:]]','')     # 한글, 영어 외는 삭제
okja
# 2. gsub() 함수로 바꾸기
okja <- gsub('의미','주제', okja)
okja <- gsub('감성','감정', okja)
okja <- gsub('내용','주제', okja)
okja <- gsub('채식주의자','채식', okja)
okja <- gsub('채식주의','채식', okja)
okja <- gsub('재밌었어요','재미', okja)
okja <- gsub('재밌게','재미', okja)
okja <- gsub('재밌어요','재미', okja)
okja
# 필터링으로 지우기
okja <- Filter(function(x){nchar(x) >=2 & nchar(x) <=5 }, okja)
okja
# 지울 단어 불러와서 반복문으로 지우기
txt <- readLines('data/okjagsub.txt')
i <- 1
for(i in 1 : length(txt)) {
okja <- gsub((txt[i]), '', okja)
}
okja
# 3. 저장후 테이블로 불러서 공백 지우기
write(unlist(okja), 'data/reple.txt')
rev <- read.table('data/reple.txt')
nrow(rev)
wordcount <- table(rev)
head(sort(wordcount, decreasing = T), 100)
# 필터링으로 지우기
okja <- Filter(function(x){nchar(x) >=2 & nchar(x) <=5 }, okja)
# 3. 저장후 테이블로 불러서 공백 지우기
write(unlist(okja), 'data/reple.txt')
rev <- read.table('data/reple.txt')
nrow(rev)
wordcount <- table(rev)
head(sort(wordcount, decreasing = T), 100)
wordcloud2(wordcount, size=2,
col='random-dark', backgroundColor='white',
rotateRatio=3,
fontFamily='배달의민족 연성')
library(wordcloud2)
wordcloud2(wordcount, size=2,
col='random-dark', backgroundColor='white',
rotateRatio=3,
fontFamily='배달의민족 연성')
wordcount <- head(sort(wordcount, decreasing = T), 100)
wordcount
View(wordcount)
class(wordcount)
wordcloud2(data = wordcount, fontFamily='배달의민족 연성')
wordcloud2(data = wordcount, fontFamily='배달의민족 연성')
wordcloud2(data = wordcount,
fontFamily='배달의민족 연성',
color = 'random-light')
wordcloud2(data = wordcount,
fontFamily='배달의민족 연성',
color = 'random-light')
wordcloud2(data = wordcount,
fontFamily='배달의민족 연성',
color = 'random-light',
backgroundColor='white')
wordcloud2(data = wordcount,
fontFamily='배달의민족 연성',
color = 'random-light',
backgroundColor='black')
wordcloud2(data = wordcount,
fontFamily='배달의민족 연성',
color = 'random-black',
backgroundColor='black')
wordcloud2(data = wordcount,
fontFamily='배달의민족 연성',
color = 'random-light',
backgroundColor='black')
wordcloud2(data = wordcount,
fontFamily='배달의민족 연성',
color = 'random-light',
backgroundColor='grey')
wordcloud2(data = wordcount,
fontFamily='배달의민족 연성',
color = 'random-light',
backgroundColor='grey',
word = 'R')
wordcloud2(data = wordcount,
fontFamily='배달의민족 연성',
color = 'random-light',
backgroundColor='grey',
word = 'R')
wordcloud2(data = wordcount,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='grey',
word = 'R')
wordcloud2(data = wordcount,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='grey')
require(devtools)
install_github("lchiffon/wordcloud2")
wordcloud2(data = wordcount,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='grey')
install_github("lchiffon/wordcloud2")
install_github("lchiffon/wordcloud2")
wordcloud2(data = wordcount,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='grey')
wordcloud2(data = wordcount, word = "r",
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='grey')
wordcloud2(data = wordcount
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='grey')
wordcloud2(data = wordcount
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='grey')
wordcloud2(data = wordcount,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='grey')
wordcloud2(data = wordcount,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
wordcloud2(data = wordcount,
fontFamily='맑은 고딕',
color = 'random-dark',
backgroundColor='black')
light
wordcloud2(data = wordcount,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
figPath = system.file("data/pig.png",package = "wordcloud2")
wordcloud2(wordcount, figPath = 'pig.png', size = 0.5, backgroundColor = 'black')
wordcloud2(data = wordcount,
figPath = figPath,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
figPath <- system.file("data/pig.png",package = "wordcloud2")
figPath
figPath <- system.file("photo/pig.png",package = "wordcloud2")
figPath
wordcloud2(data = wordcount,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
install_github("lchiffon/wordcloud2")
wordcloud2(data = wordcount,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
wordcloud2(data = wordcount,
fontFamily='맑은 고딕',
color = 'random-dark',
backgroundColor='grey')
wordcloud2(data = wordcount,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
wordcloud2(data = wordcount,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
legend(0.2, 1, '영화 옥자 분석', cex=1, fill=NA, border=NA,
bg='white', text.col='whithe', text.font=10, box.col='black')
legend(0.2, 1, '영화 옥자 분석', cex=1, fill=NA, border=NA,
bg='white', text.col='whithe', text.font=10, box.col='black')
wordcloud2(data = wordcount,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
legend(0.2, 1, '영화 옥자 분석', cex=1, fill=NA, border=NA,
bg='white', text.col='whithe', text.font=10, box.col='black')
wordcloud2(data = wordcount,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
legend(0.2, 1, '영화 옥자 분석', cex=1, fill=NA, border=NA,
bg='white', text.col='white', text.font=10, box.col='black')
wordcloud2(data = wordcount,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
legend('영화 옥자 분석', '(x3,y3)', pch=1, title='top'
legend('영화 옥자 분석', '(x3,y3)', pch=1, title='top')
legend('top', 영화 옥자 분석')
legend('top', '영화 옥자 분석')
wordcloud2(data = wordcount,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
wordcloud2(data = wordcount,
size = 1
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
wordcloud2(data = wordcount,
size = 1,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
wordcloud2(data = wordcount,
size = 2,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
wordcloud2(data = wordcount,
size = 0.5,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
wordcloud2(data = wordcount,
size = 3,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
wordcloud2(data = wordcount,
size = 3,
rotationRatio = 0.5
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
wordcloud2(data = wordcount,
size = 3,
rotationRatio = 0.5,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
wordcloud2(data = wordcount,
size = 3,
rotationRatio = 0.5,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
wordcloud2(data = wordcount,
size = 1
rotationRatio = 0.5,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
wordcloud2(data = wordcount,
size = 1,
rotationRatio = 0.5,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
wordcloud2(data = wordcount,
size = 3,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black')
wordcloud2(data = wordcount,
size = 3,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black',
rotateRatio = 0.5)
wordcloud2(data = wordcount,
size = 1,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black',
rotateRatio = 0.5)
wordcloud2(data = wordcount,
size = 1.5,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black',
rotateRatio = 0.5)
wordcount <- head(sort(wordcount, decreasing = T), 200)
rev <- read.table('data/reple.txt')
nrow(rev)
rev
wordcount <- table(rev)
wordcount <- head(sort(wordcount, decreasing = T), 200)
class(wordcount)
wordcloud2(data = wordcount,
size = 1.5,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black',
rotateRatio = 0.5)
wordcloud2(data = wordcount,
size = 1,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black',
rotateRatio = 0.5)
wordcloud2(data = wordcount,
size = 1.5,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black',
rotateRatio = 0.5)
rev <- read.table('data/reple.txt')
nrow(rev)
rev
wordcount <- table(rev)
wordcount <- head(sort(wordcount, decreasing = T), 300)
wordcloud2(data = wordcount,
size = 1.5,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black',
rotateRatio = 0.5)
wordcloud2(data = wordcount,
size = 1.2,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black',
rotateRatio = 0.5)
legend(0.2, 1, '영화 옥자 분석')
wordcloud2(data = wordcount,
size = 1.2,
fontFamily='맑은 고딕',
color = 'random-light',
backgroundColor='black',
rotateRatio = 0.5)
library(lubridate)
library(ggplot2)
rawokja <- read.csv('data/okja.csv', header = T)
head(rawokja)
okja <- rawokja %>%
select(score, date, time, month, day, fee)
head(okja)
# 01. 월별에 따른 평점
month_score <- okja %>%
select(score, month) %>%
group_by(month) %>%
summarise(month_score_mean = mean(score))
month_score
ggplot(month_score, aes(x= month, y= month_score_mean, fill= month)) +
geom_bar(stat = 'identity', color = 'black') +
ggtitle('월별에 따른 평균평점') +
xlab('월') +
ylab('평균평점') +
theme_classic() +
theme_bw(base_family = '맑은 고딕') +
theme(plot.title = element_text(size=20, color = 'red',
hjust = 0.5, vjust=0)) +
theme(axis.title.x = element_text(size = 15, color = 'red',
hjust = 0.5, vjust = 0)) +
theme(axis.title.y = element_text(size= 15, color = 'red',
hjust = 0.5, vjust = 0)) +
theme(axis.text.x = element_text(angle=90, size = 10, color='black')) +
theme(axis.text.y = element_text(angle=0, size = 10, color='black')) +
theme(legend.title = element_text(face="italic", colour="darkblue",size=10)) +
geom_text(aes(y=month_score_mean - 0.2, label= paste(round(month_score_mean,1), '점')),
color='black', size=5) +
abline(h= 8)
# 02. 요일에 따른 평점
day_score <- okja %>%
select(day, score) %>%
group_by(day) %>%
summarise(day_score_mean = mean(score))
day_score
ggplot(day_score, aes(x= day, y= day_score_mean, fill= day)) +
geom_bar(stat = 'identity')
# 03. 요금에 따른 평점
fee_score <- okja %>%
select(fee, score) %>%
group_by(fee) %>%
summarise(fee_score_mean = mean(score))
fee_score$fee <- as.character(fee_score$fee)
fee_score
ggplot(fee_score, aes(x= fee, y= fee_score_mean, fill= fee)) +
geom_bar(stat = 'identity')
